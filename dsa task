#include <iostream>
using namespace std;


struct Node {
    int marks;
    Node* prev;
    Node* next;

    Node(int value) {
        marks = value;
        prev = nullptr;
        next = nullptr;
    }
};


void addAtBeginning(Node*& head, int value) {
    Node* newNode = new Node(value);
    newNode->next = head;
    if (head != nullptr) {
        head->prev = newNode;
    }
    head = newNode;
}


void addAfter45(Node* head, int value) {
    Node* temp = head;
    while (temp != nullptr) {
        if (temp->marks == 45) {
            Node* newNode = new Node(value);
            newNode->next = temp->next;
            newNode->prev = temp;
            if (temp->next != nullptr) {
                temp->next->prev = newNode;
            }
            temp->next = newNode;
            return;
        }
        temp = temp->next;
    }
    cout << "45 not found!" << endl;
}


void display(Node* head) {
    Node* temp = head;
    while (temp != nullptr) {
        cout << temp->marks << " ";
        temp = temp->next;
    }
    cout << endl;
}


int main() {
    Node* head = nullptr;

    int n, value;
    cout << "Enter number of marks: ";
    cin >> n;

    cout << "Enter marks:" << endl;
    for (int i = 0; i < n; i++) {
        cin >> value;
        if (head == nullptr) {
            head = new Node(value);
        } else {
            Node* temp = head;
            while (temp->next != nullptr) {
                temp = temp->next;
            }
            Node* newNode = new Node(value);
            temp->next = newNode;
            newNode->prev = temp;
        }
    }

    cout << "List: ";
    display(head);

    cout << "Enter mark to add at beginning: ";
    cin >> value;
    addAtBeginning(head, value);

    cout << "List: ";
    display(head);

    cout << "Enter mark to add after 45: ";
    cin >> value;
    addAfter45(head, value);

    cout << "List: ";
    display(head);

    return 0;
}
